@page "/goodgame/favorites"
@inject ISyncLocalStorageService LocalStorage
@inject IFavoritesService FavoritesService
@implements IDisposable

<div class="text-dark mb-3">
    @if (AllFavorites().Count <= 0)
    {
        <div class="card-body">
            <p>No favorites!</p>
        </div>
    }
    else
    {
        <table class="table table-striped table-dark">
            <thead>
                <tr>
                    <th>Платформа</th>
                    <th>Имя</th>
                    <th>Статус</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in AllFavorites())
                {
                    <tr>
                        <td>@item._platform</td>
                        <td>
                            <img src=@item.AvataUrl class="img-ico" />
                            @item.Name
                        </td>
                        <td>
                            <span style="color:@ColorStatus(item.Status)">
                                @TextStatus(item.Status)
                            </span>
                            <a class="btn btn-primary" href=@item.Link target="_blank">Смотреть</a>
                        </td>
                        <td>
                            <button class="btn-warning" @onclick="(()=>DeleteFavorite(item))">Удалить</button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    }
</div>

@code {
    protected override async Task OnInitializedAsync()
    {
        FavoritesService.OnChange += StateHasChanged;
        await FavoritesService.CheckStatusOnline();
    }
    public void Dispose()
    {
        FavoritesService.OnChange -= StateHasChanged;
    }
    private async Task DeleteFavorite(Favorite favorite)
    {
        await FavoritesService.DeleteFavorite(favorite);
    }
    protected List<Favorite> AllFavorites()
    {
        var result = LocalStorage.GetItem<List<Favorite>>("favorites");
        if (result == null)
        {
            result = new List<Favorite>();
        }
        return result;
    }
    private string ColorStatus(string status)
    {
        if (status == "Live" || status == "online")
        {
            return "green";
        }
        else
        {
            return "red";
        }
    }
    private string TextStatus(string status)
    {
        if (status == "Live" || status == "online")
        {
            return "Вещает";
        }
        else
        {
            return "Выключен";
        }
    }
}
